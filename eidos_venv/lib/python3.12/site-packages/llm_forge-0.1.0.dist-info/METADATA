Metadata-Version: 2.4
Name: llm_forge
Version: 0.1.0
Summary: A recursive framework for language model development, orchestration, and deployment
Home-page: https://github.com/Ace1928/llm_forge
Author: Lloyd Handyside
Author-email: Lloyd Handyside <ace1928@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/Ace1928/llm_forge
Project-URL: Repository, https://github.com/Ace1928/llm_forge
Project-URL: Documentation, https://github.com/Ace1928/llm_forge/docs
Project-URL: Bug Tracker, https://github.com/Ace1928/llm_forge/issues
Project-URL: Change Log, https://github.com/Ace1928/llm_forge/blob/main/CHANGELOG.md
Keywords: llm,forge,language model,processing,orchestration,ai,generative,pipeline
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.8, <3.13
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pydantic<3.0.0,>=2.0.0
Requires-Dist: typer<1.0.0,>=0.9.0
Requires-Dist: rich<14.0.0,>=13.0.0
Requires-Dist: PyYAML<7.0,>=6.0
Requires-Dist: jinja2<4.0.0,>=3.0.0
Requires-Dist: jsonschema<5.0.0,>=4.0.0
Requires-Dist: httpx<1.0.0,>=0.24.0
Requires-Dist: importlib-metadata<7.0.0,>=6.0.0
Provides-Extra: dev
Requires-Dist: pytest<8.0.0,>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov<5.0.0,>=4.0.0; extra == "dev"
Requires-Dist: mypy<2.0.0,>=1.0.0; extra == "dev"
Requires-Dist: black<24.0.0,>=23.0.0; extra == "dev"
Requires-Dist: isort<6.0.0,>=5.12.0; extra == "dev"
Requires-Dist: ruff<0.1.0,>=0.0.275; extra == "dev"
Requires-Dist: pre-commit<4.0.0,>=3.0.0; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx<7.0.0,>=6.0.0; extra == "docs"
Requires-Dist: sphinx-rtd-theme<2.0.0,>=1.2.0; extra == "docs"
Requires-Dist: sphinx-autodoc-typehints<2.0.0,>=1.22.0; extra == "docs"
Requires-Dist: myst-parser<3.0.0,>=2.0.0; extra == "docs"
Provides-Extra: testing
Requires-Dist: pytest<8.0.0,>=7.0.0; extra == "testing"
Requires-Dist: pytest-cov<5.0.0,>=4.0.0; extra == "testing"
Requires-Dist: tox<5.0.0,>=4.0.0; extra == "testing"
Provides-Extra: all
Requires-Dist: llm_forge[dev,docs,testing]; extra == "all"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# LLM Forge

> *Form follows function; elegance emerges from precision.*

A recursive framework for language model development, orchestration, and deployment with mathematical inevitability in its design. LLM Forge provides structured pipelines for configuration, parsing, refinement, generation, and task managementâ€”each component precisely engineered for maximum efficiency.

## âš¡ Core Architecture

| Component         | Purpose                        | Implementation               |
| ----------------- | ------------------------------ | ---------------------------- |
| **Configuration** | Schema validation & management | Type-safe constraint systems |
| **Parsing**       | Data extraction & tokenization | Multi-format converters      |
| **Refinement**    | Filtering & transformation     | Composable filter chains     |
| **Generation**    | Output synthesis               | Model-agnostic interfaces    |
| **Orchestration** | Task scheduling & management   | Event-driven workflow engine |
| **Interface**     | Human-system interaction       | Intuitive command-line tools |

## ðŸ§© System Structure

```plaintext
llm_forge/
â”œâ”€â”€ src/
â”‚   â””â”€â”€ llm_forge/
â”‚       â”œâ”€â”€ config/          # Configuration management
â”‚       â”œâ”€â”€ parsing/         # Data parsing utilities
â”‚       â”œâ”€â”€ refining/        # Data refinement tools
â”‚       â”œâ”€â”€ generation/      # Output generation mechanisms
â”‚       â””â”€â”€ orchestration/   # Task orchestration components
â”œâ”€â”€ tests/                   # Unit tests for the framework
â”œâ”€â”€ docs/                    # Documentation files
â”œâ”€â”€ .github/                 # GitHub workflows
â”œâ”€â”€ .gitignore               # Git ignore file
â”œâ”€â”€ LICENSE                  # License information
â”œâ”€â”€ README.md                # Project overview
â”œâ”€â”€ pyproject.toml           # Project configuration
â”œâ”€â”€ setup.py                 # Packaging script
â”œâ”€â”€ requirements.txt         # Runtime dependencies
â”œâ”€â”€ requirements-dev.txt     # Development dependencies
â””â”€â”€ install.sh               # Installation script
```

## Installation

To install the necessary dependencies, run:

```bash
bash install.sh
```

## Usage

For detailed usage instructions, refer to the [usage documentation](docs/usage.md).

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.
