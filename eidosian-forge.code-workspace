{
  "folders": [
    {
      "name": "eidosian_forge",
      "path": "."
    }
  ],
  "settings": {
    // ━━━━ ACCESSIBILITY & ERGONOMICS ━━━━
    // For the Eidosian who values clarity without eye strain
    "editor.fontFamily": "JetBrains Mono, Fira Code, 'Cascadia Code', Consolas, 'Courier New', monospace",
    "editor.fontLigatures": "'calt', 'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'ss06', 'ss07', 'ss08'",
    "editor.fontSize": 14,
    "editor.lineHeight": 22,
    "editor.cursorBlinking": "phase",
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": "active",
    "editor.guides.bracketPairsHorizontal": "active",
    "editor.guides.highlightActiveBracketPair": true,
    "editor.guides.indentation": true,
    "editor.stickyScroll.enabled": true,
    "editor.stickyScroll.maxLineCount": 5,
    "editor.minimap.renderCharacters": false,
    "editor.minimap.maxColumn": 80,
    "editor.minimap.scale": 2,
    "editor.accessibilitySupport": "on",
    "editor.inlayHints.enabled": "on",
    "editor.inlayHints.padding": true,
    "editor.semanticHighlighting.enabled": true,
    "editor.semanticTokenColorCustomizations": {
      "enabled": true
    },
    "editor.smoothScrolling": true,
    "editor.experimental.asyncTokenization": true,
    "window.autoDetectColorScheme": true,
    "window.commandCenter": true,
    "window.density.editorTabHeight": "compact",
    "workbench.preferredDarkColorTheme": "GitHub Dark Default",
    "workbench.list.smoothScrolling": true,
    "workbench.tree.expandMode": "singleClick",
    "workbench.tree.indent": 10,
    "workbench.editor.decorations.badges": true,
    "workbench.editor.decorations.colors": true,

    // ━━━━ AI COLLABORATORS ━━━━
    // Because even an Eidosian needs a digital familiar
    "github.copilot.enable": {
      "*": true,
      "plaintext": true,
      "markdown": true,
      "yaml": true,
      "jsonc": true
    },
    "github.copilot.editor.enableAutoCompletions": true,
    "github.copilot.editor.enableCodeActions": true,
    "github.copilot.advanced.indentationMode": "autodetect",
    "github.copilot.advanced.showEditorCompletions": true,
    "github.copilot.advanced.setAutoCompletionTriggerMode": "lazy",
    "github.copilot.chat.localeOverride": "en",
    "github.copilot.chat.codeGeneration.instructions": [
      { "file": "./.github/prompts/eidosian-principles.prompt.md" },
      { "file": "./.github/prompts/eidosian-refinement.prompt.md" },
      { "file": "./.github/prompts/eidosian-style.prompt.md" },
      { "text": "No self congratulatory language." },
      { "text": "No unbased hype." },
      { "text": "No inflationary claims." },
      { "text": "No grandiosity." },
      { "text": "No self aggrandizing." },
      { "text": "Ensure humour." },
      { "text": "Ensure wit." },
      { "text": "Ensure all changes are retrocompatible." },
      { "text": "Strict typing." },
      { "text": "Systematic Naming." }
    ],
    "inlineChat.accessibleDiffView": "on",
    "inlineChat.mode": "preview",
    "jupyter.interactiveWindow.creationMode": "perFile",

    // ━━━━ POLYGLOT MASTERY ━━━━
    // For the Eidosian whose code speaks many tongues
    "markdown.editor.drop.enabled": "smart",
    "markdown.validate.enabled": true,
    "markdown.editor.pasteUrlAsFormattedLink.enabled": "smart",
    "markdown.preview.typographer": true,
    "markdown.preview.openMarkdownLinks": "inEditor",
    "markdown.updateLinksOnFileMove.enabled": "always",
    "typescript.preferences.importModuleSpecifier": "relative",
    "typescript.updateImportsOnFileMove.enabled": "always",
    "typescript.preferences.quoteStyle": "single",
    "typescript.inlayHints.enumMemberValues.enabled": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    "typescript.inlayHints.parameterNames.enabled": "literals",
    "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
    "typescript.inlayHints.variableTypes.enabled": true,
    "typescript.suggest.completeFunctionCalls": true,
    "python.formatting.defaultFormatter": "ms-python.black-formatter",
    "python.languageServer": "Pylance",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.inlayHints.variableTypes": true,
    "python.analysis.inlayHints.functionReturnTypes": true,
    "python.analysis.autoFormatStrings": true,
    "python.analysis.diagnosticMode": "workspace",
    "python.analysis.fixAll": ["source.unusedImports"],
    "pylint.enabled": true,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "javascript.preferences.quoteStyle": "single",
    "javascript.inlayHints.enumMemberValues.enabled": true,
    "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
    "javascript.inlayHints.parameterNames.enabled": "literals",
    "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
    "javascript.format.semicolons": "insert",
    "json.schemaDownload.enable": true,
    "json.validate.enable": true,

    // ━━━━ CODE QUALITY & FORMATTING ━━━━
    // The Eidosian code aesthetic - elegant and precise
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.defaultFormatter": null,
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit",
      "source.organizeImports": "explicit",
      "source.sortImports": "explicit",
      "source.fixAll.eslint": "explicit"
    },
    "editor.linkedEditing": true,
    "editor.wordWrap": "on",
    "editor.rulers": [80, 100, 120],
    "editor.showFoldingControls": "always",
    "editor.foldingStrategy": "auto",
    "editor.gotoLocation.multipleImplementations": "gotoAndPeek",
    "editor.gotoLocation.multipleDefinitions": "gotoAndPeek",
    "diffEditor.ignoreTrimWhitespace": false,
    "diffEditor.experimental.useVersion2": true,
    "diffEditor.maxComputationTime": 5000,
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 1000,
    "html.format.wrapLineLength": 100,
    "html.format.wrapAttributes": "auto",

    // ━━━━ TERMINAL ARCANA ━━━━
    // Where Eidosians craft their digital incantations
    "terminal.integrated.fontFamily": "MesloLGS NF, Hack Nerd Font, Cascadia Code PL",
    "terminal.integrated.fontSize": 13,
    "terminal.integrated.fontWeight": "normal",
    "terminal.integrated.tabs.enabled": true,
    "terminal.integrated.tabs.showActions": "always",
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.cursorWidth": 2,
    "terminal.integrated.defaultProfile.linux": "bash",
    "terminal.integrated.defaultProfile.osx": "bash",
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "terminal.integrated.persistentSessionReviveProcess": "onExitAndWindowClose",
    "terminal.integrated.shellIntegration.enabled": true,
    "terminal.integrated.shellIntegration.decorationsEnabled": "both",
    "terminal.integrated.gpuAcceleration": "auto",
    "terminal.integrated.smoothScrolling": true,
    "terminal.integrated.copyOnSelection": true,

    // ━━━━ TIMELINE TRACKING ━━━━
    // Git: The Eidosian way of bending time and space
    "git.autofetch": true,
    "git.autoStash": true,
    "git.confirmSync": false,
    "git.enableSmartCommit": true,
    "git.branchProtection": ["main", "master", "develop", "production"],
    "git.branchProtectionPrompt": "alwaysPrompt",
    "git.mergeEditor": true,
    "git.postCommitCommand": "sync",
    "git.pullBeforeCheckout": true,
    "git.showActionButton": {
      "publish": true,
      "sync": true,
      "commit": true
    },
    "git.untrackedChanges": "separate",
    "git.allowForcePush": false,
    "git.rebaseWhenSync": true,
    "git.suggestSmartCommit": true,
    "github.gitProtocol": "ssh",
    "githubPullRequests.createOnPublishBranch": "ask",
    "githubPullRequests.defaultMergeMethod": "squash",
    "githubPullRequests.pullBranch": "always",

    // ━━━━ PERFORMANCE ENCHANTMENTS ━━━━
    // Optimizing the Eidosian workflow
    "files.watcherExclude": {
      "**/.git/objects/**": true,
      "**/.git/subtree-cache/**": true,
      "**/node_modules/**": true,
      "**/.venv/**": true,
      "**/.hg/store/**": true,
      "**/dist/**": true,
      "**/build/**": true
    },
    "search.exclude": {
      "**/node_modules": true,
      "**/bower_components": true,
      "**/.venv": true,
      "**/dist": true,
      "**/build": true
    },
    "files.exclude": {
      "**/.git": true,
      "**/.DS_Store": true,
      "**/__pycache__": true,
      "**/.pytest_cache": true,
      "**/.mypy_cache": true,
      "**/*.pyc": true,
      "**/.ruff_cache": true
    },
    "workbench.editor.limit.enabled": true,
    "workbench.editor.limit.value": 12,
    "workbench.editor.limit.perEditorGroup": true,
    "editor.snippetSuggestions": "top",
    "search.smartCase": true,
    "search.useGlobalIgnoreFiles": true,
    "search.seedOnFocus": true,

    // ━━━━ EIDOSIAN AUTOMATION ━━━━
    // Automation that thinks like an Eidosian
    "editor.suggest.preview": true,
    "editor.suggest.showStatusBar": true,
    "workbench.editor.pinnedTabsOnSeparateRow": true,
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.expand": false,
    "explorer.fileNesting.patterns": {
      "*.ts": "${capture}.js, ${capture}.d.ts, ${capture}.spec.ts",
      "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
      "*.jsx": "${capture}.js",
      "*.tsx": "${capture}.ts, ${capture}.spec.tsx",
      "tsconfig.json": "tsconfig.*.json",
      "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml"
    },
    "symbols.hideSymbolsInEditableSourceCode": true,
    "editor.codeLens": true,
    "editor.codeLensFontSize": 12,
    "editor.definitionLinkOpensInPeek": true,
    "task.autoDetect": "on",
    "task.quickOpen.history": 10,
    "task.saveBeforeRun": "always",

    // ━━━━ SYNCHRONIZATION MATRIX ━━━━
    // For the Eidosian who transcends devices
    "settingsSync.keybindingsPerPlatform": false,
    "workbench.settings.settingsSearchTocBehavior": "filter",
    "workbench.settings.openDefaultKeybindings": true,
    "workbench.settings.useSplitJSON": true,
    "settingsSync.ignoredExtensions": [],
    "[jsonc]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "accessibility.signalOptions.volume": 50,
    "accessibility.signals.lineHasError": {
      "sound": "auto"
    },
    "accessibility.signals.lineHasBreakpoint": {
      "sound": "auto"
    },
    "accessibility.signals.terminalCommandFailed": {
      "sound": "auto"
    },
    "jupyter.interactiveWindow.codeLens.enable": true
  }
}
